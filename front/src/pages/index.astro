---
import Layout from "../layouts/Layout.astro";
import PasswordService from "./password-service";


const host = "127.0.0.1";
var response = await fetch(`http://${host}:5000/generate_password`).then(
	(response) => response.json(),
);


if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const digits = data.get("digits");
	const symbols = data.get("symbols");
	const passwordLength = data.get("passwordLength");
    if (!digits && !symbols && !passwordLength) {
      await PasswordService.generatePassword(digits, symbols, passwordLength);
      return Astro.redirect("/");
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}

---

<Layout title="Password generator">
	<section class="bg-gray-50 dark:bg-gray-900">
		<div
			class="flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0"
		>
			<div
				class="w-full p-6 bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md dark:bg-gray-800 dark:border-gray-700 sm:p-8"
			>
				<h2
					class="mb-1 text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white"
				>
					Password generator
				</h2>

				<form class="mt-4 space-y-4 lg:mt-5 md:space-y-5" method="post">
					<div class="flex items-start">
						<div class="flex items-center h-5">
							<input
								id="digits"
								name="digits"
								aria-describedby="digits"
								type="checkbox"
								class="w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-primary-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-primary-600 dark:ring-offset-gray-800"
							/>
						</div>
						<div class="ml-3 text-sm">
							<label
								for="digits"
								class="font-light text-gray-500 dark:text-gray-300"
								>Digits</label
							>
						</div>

						<div class="flex items-center h-5">
							<input
								id="symbols"
								name="symbols"
								aria-describedby="symbols"
								type="checkbox"
								class="w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-primary-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-primary-600 dark:ring-offset-gray-800"
							/>
						</div>
						<div class="ml-3 text-sm">
							<label
								for="symbols"
								class="font-light text-gray-500 dark:text-gray-300"
								>Symbols</label
							>
						</div>
						<div class="flex items-center h-5">
							<input
								id="passwordLength"
								name="passwordLength"
								aria-describedby="passwordLength"
								type="text"
								class="w-auto h-auto border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-primary-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-primary-600 dark:ring-offset-gray-800"
							/>
						</div>
					</div>
					<input
						id="submitButton"
						type="submit"
						class="submitButton w-full text-white bg-primary-600 hover:bg-primary-700 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-teal-700 dark:hover:bg-teal-800 dark:focus:ring-primary-800"
						value="Generate password"
					/>
				</form>
				<div class="text-gray-500">{response.password}</div>
			</div>
		</div>
	</section>
</Layout>

<script>
	const digits = document.getElementById("digits");
	const symbols = document.getElementById("symbols");
	const passwordLength = document.getElementById("passwordLength");

	const buttonSubmit = document.querySelectorAll("button.submitButton");

	console.log(digits);
	console.log("Hello world");

	// buttonSubmit.forEach((button) => {
	// 	button.addEventListener("click", async (e) => {
	// 		e.preventDefault();

	// 		const requestOptions: RequestInit = {
	// 			method: "GET",
	// 			mode: "no-cors",
	// 			headers: { "Content-Type": "application/json" },
	// 		};

	// 		var response = await fetch(
	// 			"http://127.0.0.1:5000/generate_password",
	// 			requestOptions,
	// 		);
	// 	});
	// });
</script>
